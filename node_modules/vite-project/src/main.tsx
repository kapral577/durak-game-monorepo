// src/main.tsx - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

import React from 'react';
import ReactDOM from 'react-dom/client';

// ‚úÖ –ü–ï–†–í–´–ú: –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ Telegram
import './index.css';

// ‚úÖ –ü–û–°–õ–ï–î–ù–ò–ú: –∫–∞—Å—Ç–æ–º–Ω—ã–π Bootstrap (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
import './styles/custom-bootstrap.scss';

import App from './App';

// ===== –ö–û–ù–°–¢–ê–ù–¢–´ =====
const TELEGRAM_CONFIG = {
  DEFAULT_HEADER_COLOR: '#2a2a2a',
  DEFAULT_BG_COLOR: '#2a2a2a',
  INIT_TIMEOUT: 100
} as const;

// ===== –¢–ò–ü–´ –î–õ–Ø TELEGRAM WEBAPP =====
declare global {
  interface Window {
    Telegram?: {
      WebApp: {
        ready: () => void;
        expand: () => void;
        close: () => void;
        enableClosingConfirmation: () => void;
        disableVerticalSwipes: () => void;
        setHeaderColor: (color: string) => void;
        setBackgroundColor: (color: string) => void;
        version: string;
        platform: string;
        themeParams?: {
          bg_color?: string;
          text_color?: string;
          hint_color?: string;
          link_color?: string;
          button_color?: string;
          button_text_color?: string;
        };
        initDataUnsafe?: {
          user?: {
            id: number;
            first_name: string;
            last_name?: string;
            username?: string;
            language_code?: string;
          };
          query_id?: string;
          auth_date?: number;
          hash?: string;
        };
      };
    };
  }
}

// ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø TELEGRAM WEBAPP =====
const initializeTelegramWebApp = async (): Promise<void> => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram WebApp API
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
      tg.ready();
      tg.expand();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–≥—Ä—ã
      tg.enableClosingConfirmation();
      tg.disableVerticalSwipes();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –º–µ—Ç–æ–¥–æ–≤
      if (tg.themeParams && typeof tg.setHeaderColor === 'function') {
        tg.setHeaderColor(tg.themeParams.bg_color || TELEGRAM_CONFIG.DEFAULT_HEADER_COLOR);
      }
      
      if (tg.themeParams && typeof tg.setBackgroundColor === 'function') {
        tg.setBackgroundColor(tg.themeParams.bg_color || TELEGRAM_CONFIG.DEFAULT_BG_COLOR);
      }
      
      if (process.env.NODE_ENV === 'development') {
        console.log('üöÄ Telegram WebApp initialized successfully');
        console.log('üì± Version:', tg.version);
        console.log('üíª Platform:', tg.platform);
        console.log('üé® Theme:', tg.themeParams);
      }
    } else if (process.env.NODE_ENV === 'development') {
      console.warn('‚ö†Ô∏è Telegram WebApp API not available - running in browser mode');
    }
  } catch (error) {
    if (process.env.NODE_ENV === 'development') {
      console.error('‚ùå Failed to initialize Telegram WebApp:', error);
    }
    // –í production –Ω–µ –ª–æ–º–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ Telegram API
  }
};

// ===== –ü–†–û–í–ï–†–ö–ê ROOT –≠–õ–ï–ú–ï–ù–¢–ê =====
const rootElement = document.getElementById('root');

if (!rootElement) {
  throw new Error('‚ùå Root element not found. Make sure index.html contains <div id="root"></div>');
}

// ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –†–ï–ù–î–ï–† =====
const startApp = async (): Promise<void> => {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  await initializeTelegramWebApp();
  
  // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  await new Promise(resolve => setTimeout(resolve, TELEGRAM_CONFIG.INIT_TIMEOUT));
  
  // –†–µ–Ω–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const root = ReactDOM.createRoot(rootElement);
  
  root.render(
    <React.StrictMode>
      <App />
    </React.StrictMode>
  );
  
  if (process.env.NODE_ENV === 'development') {
    console.log('üéÆ Durak Game App started successfully!');
  }
};

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
startApp().catch(error => {
  console.error('üí• Failed to start app:', error);
  
  // Fallback —Ä–µ–Ω–¥–µ—Ä –±–µ–∑ Telegram –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const root = ReactDOM.createRoot(rootElement);
  root.render(
    <React.StrictMode>
      <App />
    </React.StrictMode>
  );
});
