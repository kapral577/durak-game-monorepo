import React from 'react';
import { Navbar, Nav, Badge } from 'react-bootstrap';
import { Link, useLocation } from 'react-router-dom';
import { useGame } from '../context/GameProvider';

const BottomNavbar: React.FC = () => {
  const location = useLocation();
  const { 
    isConnected, 
    currentRoom, 
    gameState, 
    rooms,
    telegramUser 
  } = useGame();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const isActive = (path: string): boolean => {
    if (path === '/' && location.pathname === '/') return true;
    if (path !== '/' && location.pathname.startsWith(path)) return true;
    return false;
  };

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç
  const availableRoomsCount = rooms.filter(room => 
    room.status === 'waiting' && room.players.length < room.maxPlayers
  ).length;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è)
  const hasNotifications = false; // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

  return (
    <Navbar bg="light" className="border-top justify-content-center fixed-bottom">
      <Nav className="d-flex justify-content-around w-100">
        
        {/* –ì–ª–∞–≤–Ω–∞—è */}
        <Nav.Item className="text-center">
          <Nav.Link
            as={Link}
            to="/"
            className={`d-flex flex-column align-items-center p-2 ${
              isActive('/') ? 'text-primary' : 'text-muted'
            }`}
          >
            <span style={{ fontSize: '1.2rem' }}>
              {isActive('/') ? 'üè†' : 'üè°'}
            </span>
            <small>–ì–ª–∞–≤–Ω–∞—è</small>
          </Nav.Link>
        </Nav.Item>

        {/* –ö–æ–º–Ω–∞—Ç—ã */}
        <Nav.Item className="text-center position-relative">
          <Nav.Link
            as={Link}
            to="/rooms"
            className={`d-flex flex-column align-items-center p-2 ${
              isActive('/rooms') ? 'text-primary' : 'text-muted'
            }`}
          >
            <span style={{ fontSize: '1.2rem' }}>
              {isActive('/rooms') ? 'üéØ' : 'üé≤'}
            </span>
            <small>–ö–æ–º–Ω–∞—Ç—ã</small>
            
            {/* –ë–µ–π–¥–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç */}
            {availableRoomsCount > 0 && (
              <Badge 
                bg="success" 
                pill 
                className="position-absolute"
                style={{ 
                  top: '0px', 
                  right: '8px',
                  fontSize: '0.6rem',
                  minWidth: '16px',
                  height: '16px'
                }}
              >
                {availableRoomsCount}
              </Badge>
            )}
          </Nav.Link>
        </Nav.Item>

        {/* –¢–µ–∫—É—â–∞—è –∏–≥—Ä–∞ (–µ—Å–ª–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ –∏–ª–∏ –∏–≥—Ä–µ) */}
        {(currentRoom || gameState) && (
          <Nav.Item className="text-center">
            <Nav.Link
              as={Link}
              to={gameState ? `/game/${currentRoom?.id}` : `/room/${currentRoom?.id}`}
              className={`d-flex flex-column align-items-center p-2 ${
                isActive('/room/') || isActive('/game/') ? 'text-primary' : 'text-muted'
              }`}
            >
              <span style={{ fontSize: '1.2rem' }}>
                {gameState ? 'üÉè' : '‚è≥'}
              </span>
              <small>{gameState ? '–ò–≥—Ä–∞' : '–ö–æ–º–Ω–∞—Ç–∞'}</small>
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã */}
              {gameState && (
                <div 
                  className="position-absolute bg-success rounded-circle"
                  style={{ 
                    top: '8px', 
                    right: '8px',
                    width: '8px',
                    height: '8px'
                  }}
                />
              )}
            </Nav.Link>
          </Nav.Item>
        )}

        {/* –î—Ä—É–∑—å—è */}
        <Nav.Item className="text-center position-relative">
          <Nav.Link
            as={Link}
            to="/friends"
            className={`d-flex flex-column align-items-center p-2 ${
              isActive('/friends') ? 'text-primary' : 'text-muted'
            }`}
          >
            <span style={{ fontSize: '1.2rem' }}>
              {isActive('/friends') ? 'üë•' : 'üë§'}
            </span>
            <small>–î—Ä—É–∑—å—è</small>
            
            {/* –ë–µ–π–¥–∂ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
            {hasNotifications && (
              <Badge 
                bg="danger" 
                pill 
                className="position-absolute"
                style={{ 
                  top: '0px', 
                  right: '8px',
                  fontSize: '0.6rem',
                  minWidth: '16px',
                  height: '16px'
                }}
              >
                !
              </Badge>
            )}
          </Nav.Link>
        </Nav.Item>

        {/* –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É */}
        <Nav.Item className="text-center">
          <Nav.Link
            as={Link}
            to="/settings"
            className={`d-flex flex-column align-items-center p-2 ${
              isActive('/settings') ? 'text-primary' : 'text-muted'
            }`}
            style={{ opacity: isConnected ? 1 : 0.5 }}
          >
            <span style={{ fontSize: '1.2rem' }}>
              {isActive('/settings') ? '‚öôÔ∏è' : '‚ûï'}
            </span>
            <small>–°–æ–∑–¥–∞—Ç—å</small>
          </Nav.Link>
        </Nav.Item>

      </Nav>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
      {!isConnected && (
        <div 
          className="position-absolute bg-warning rounded-circle"
          style={{ 
            top: '5px', 
            left: '50%',
            transform: 'translateX(-50%)',
            width: '6px',
            height: '6px'
          }}
          title="–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        />
      )}
    </Navbar>
  );
};

export default BottomNavbar;