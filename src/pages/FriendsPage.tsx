import React, { useState, useEffect } from 'react';
import { Container, Row, Col, Card, Button, Form, InputGroup, Badge } from 'react-bootstrap';
import { useGame } from '../context/GameProvider';

const FriendsPage: React.FC = () => {
  const { telegramUser, sendMessage, isConnected } = useGame();
  const [inviteLink, setInviteLink] = useState('');

  useEffect(() => {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
    const botUsername = 'YourBotUsername'; // –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –±–æ—Ç
    const startParam = `invite_${telegramUser?.id || 'unknown'}`;
    setInviteLink(`https://t.me/${botUsername}?start=${startParam}`);
  }, [telegramUser]);

  const handleInviteFriends = () => {
    if (window.Telegram?.WebApp) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram WebApp API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
      const shareText = `üÉè –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–≥—Ä–µ –≤ –î—É—Ä–∞–∫!\n\nüë§ ${telegramUser?.first_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è —Å—ã–≥—Ä–∞—Ç—å`;
      
      const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(inviteLink)}&text=${encodeURIComponent(shareText)}`;
      window.open(shareUrl, '_blank');
    }
  };

  const handleCreatePrivateRoom = () => {
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É —Ç–æ–ª—å–∫–æ –¥–ª—è –¥—Ä—É–∑–µ–π
    sendMessage({
      type: 'create_private_room',
      name: `–ö–æ–º–Ω–∞—Ç–∞ ${telegramUser?.first_name}`,
      isPrivate: true,
      inviteOnly: true
    });
  };

  return (
    <Container className="py-4">
      <Row className="justify-content-center">
        <Col xs={12} md={8} lg={6}>
          <h2 className="mb-4">üë• –î—Ä—É–∑—å—è</h2>

          {/* –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π */}
          <Card className="mb-4">
            <Card.Header>
              <h5 className="mb-0">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π</h5>
            </Card.Header>
            <Card.Body>
              <p className="text-muted">
                –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ
              </p>
              
              <InputGroup className="mb-3">
                <Form.Control
                  type="text"
                  value={inviteLink}
                  readOnly
                  className="bg-light"
                />
                <Button 
                  variant="outline-primary"
                  onClick={() => navigator.clipboard.writeText(inviteLink)}
                >
                  –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                </Button>
              </InputGroup>

              <div className="d-grid">
                <Button 
                  variant="primary" 
                  onClick={handleInviteFriends}
                  disabled={!isConnected}
                >
                  üì§ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —á–µ—Ä–µ–∑ Telegram
                </Button>
              </div>
            </Card.Body>
          </Card>

          {/* –ü—Ä–∏–≤–∞—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ */}
          <Card className="mb-4">
            <Card.Header>
              <h5 className="mb-0">–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –∏–≥—Ä–∞</h5>
            </Card.Header>
            <Card.Body>
              <p className="text-muted">
                –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π
              </p>
              <div className="d-grid">
                <Button 
                  variant="success" 
                  onClick={handleCreatePrivateRoom}
                  disabled={!isConnected}
                >
                  üîí –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É
                </Button>
              </div>
            </Card.Body>
          </Card>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
          {telegramUser && (
            <Card className="bg-light">
              <Card.Body>
                <div className="d-flex align-items-center">
                  {telegramUser.photo_url && (
                    <img 
                      src={telegramUser.photo_url} 
                      alt="Avatar" 
                      className="rounded-circle me-3"
                      width={50}
                      height={50}
                    />
                  )}
                  <div>
                    <h6 className="mb-1">{telegramUser.first_name} {telegramUser.last_name}</h6>
                    {telegramUser.username && (
                      <small className="text-muted">@{telegramUser.username}</small>
                    )}
                  </div>
                </div>
              </Card.Body>
            </Card>
          )}
        </Col>
      </Row>
    </Container>
  );
};

export default FriendsPage;