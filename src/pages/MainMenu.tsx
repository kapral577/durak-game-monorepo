// src/pages/MainMenu.tsx - –§–†–û–ù–¢–ï–ù–î - –ò–°–ü–†–ê–í–õ–ï–ù–û
import React from 'react';
import { Container, Row, Col, Card, Button, Alert, Badge } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';
import { useGame } from '../context/GameProvider';

const MainMenu: React.FC = () => {
  const navigate = useNavigate();
  const { 
    isConnected, 
    error, 
    clearError, 
    telegramUser, 
    isAuthenticated,
    rooms,
    currentRoom,
    gameState
  } = useGame();

  const handleCreateGame = () => {
    if (!isConnected || !isAuthenticated) {
      return;
    }
    navigate('/settings');
  };

  const handleJoinGame = () => {
    if (!isConnected || !isAuthenticated) {
      return;
    }
    navigate('/rooms');
  };

  const handleFriends = () => {
    if (!isConnected || !isAuthenticated) {
      return;
    }
    navigate('/friends');
  };

  const handleContinueGame = () => {
    if (currentRoom) {
      if (gameState) {
        navigate(`/game/${currentRoom.id}`);
      } else {
        navigate(`/room/${currentRoom.id}`);
      }
    }
  };

  // –ü–æ–¥—Å—á–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç
  const availableRoomsCount = rooms.filter(room => 
    room.status === 'waiting' && room.players.length < room.maxPlayers
  ).length;

  return (
    <Container className="py-4">
      <Row className="justify-content-center">
        <Col xs={12} md={8} lg={6}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <Card className="text-center mb-4 border-0 bg-primary text-white">
            <Card.Body>
              <h1 className="mb-0">üÉè –î—É—Ä–∞–∫</h1>
              <p className="mb-0 mt-2 opacity-75">
                –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–æ—á–Ω–∞—è –∏–≥—Ä–∞ –æ–Ω–ª–∞–π–Ω
              </p>
              {telegramUser && (
                <small className="d-block mt-2 opacity-50">
                  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {telegramUser.first_name}!
                </small>
              )}
            </Card.Body>
          </Card>

          {/* –û—à–∏–±–∫–∏ */}
          {error && (
            <Alert variant="danger" dismissible onClose={clearError}>
              <Alert.Heading>–û—à–∏–±–∫–∞</Alert.Heading>
              <p className="mb-0">{error}</p>
            </Alert>
          )}

          {/* –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
          {!isAuthenticated && (
            <Alert variant="warning" className="mb-4">
              <Alert.Heading>–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</Alert.Heading>
              <p className="mb-0">
                –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ Telegram. 
                {process.env.NODE_ENV === 'development' && (
                  <span className="d-block mt-2 small">
                    <strong>–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:</strong> –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                  </span>
                )}
              </p>
            </Alert>
          )}

          {/* –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É */}
          {(currentRoom || gameState) && isAuthenticated && (
            <Card className="mb-4 border-warning">
              <Card.Body>
                <div className="d-flex align-items-center justify-content-between">
                  <div>
                    <h6 className="mb-1 text-warning">
                      {gameState ? 'üéÆ –ê–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞' : '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤ –∫–æ–º–Ω–∞—Ç–µ'}
                    </h6>
                    <small className="text-muted">
                      {currentRoom?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞'}
                    </small>
                  </div>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={handleContinueGame}
                  >
                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                  </Button>
                </div>
              </Card.Body>
            </Card>
          )}

          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <Card className="mb-4">
            <Card.Body>
              <div className="d-grid gap-3">
                
                {/* –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É */}
                <Button
                  variant="success"
                  size="lg"
                  onClick={handleCreateGame}
                  disabled={!isConnected || !isAuthenticated}
                  className="py-3"
                >
                  <div className="d-flex align-items-center justify-content-center">
                    <span className="me-2">‚ûï</span>
                    <div>
                      <div className="fw-bold">–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É</div>
                      <small className="opacity-75">
                        –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π
                      </small>
                    </div>
                  </div>
                </Button>

                {/* –ù–∞–π—Ç–∏ –∏–≥—Ä—É */}
                <Button
                  variant="primary"
                  size="lg"
                  onClick={handleJoinGame}
                  disabled={!isConnected || !isAuthenticated}
                  className="py-3 position-relative"
                >
                  <div className="d-flex align-items-center justify-content-center">
                    <span className="me-2">üîç</span>
                    <div>
                      <div className="fw-bold">–ù–∞–π—Ç–∏ –∏–≥—Ä—É</div>
                      <small className="opacity-75">
                        –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–Ω–∞—Ç–µ
                        {availableRoomsCount > 0 && (
                          <span className="ms-1">({availableRoomsCount} –¥–æ—Å—Ç—É–ø–Ω–æ)</span>
                        )}
                      </small>
                    </div>
                  </div>
                  
                  {/* –ë–µ–π–¥–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–æ–º–Ω–∞—Ç */}
                  {availableRoomsCount > 0 && (
                    <Badge 
                      bg="light" 
                      text="dark" 
                      pill 
                      className="position-absolute top-0 end-0 me-2 mt-2"
                    >
                      {availableRoomsCount}
                    </Badge>
                  )}
                </Button>

                {/* –ò–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ */}
                <Button
                  variant="info"
                  size="lg"
                  onClick={handleFriends}
                  disabled={!isConnected || !isAuthenticated}
                  className="py-3"
                >
                  <div className="d-flex align-items-center justify-content-center">
                    <span className="me-2">üë•</span>
                    <div>
                      <div className="fw-bold">–ò–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏</div>
                      <small className="opacity-75">
                        –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –≤ –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∏–≥—Ä—É
                      </small>
                    </div>
                  </div>
                </Button>

              </div>
            </Card.Body>
          </Card>

          {/* –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
          {!isConnected && (
            <Card className="mb-3 bg-light">
              <Card.Body className="text-center">
                <div className="text-muted">
                  <div className="spinner-border spinner-border-sm me-2" role="status">
                    <span className="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                  </div>
                  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...
                </div>
              </Card.Body>
            </Card>
          )}

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–ª–∞–π–Ω */}
          {isConnected && isAuthenticated && (
            <Card className="bg-light">
              <Card.Body className="text-center">
                <h6 className="text-muted mb-2">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–ª–∞–π–Ω</h6>
                <div className="row text-center">
                  <div className="col-4">
                    <div className="fw-bold text-primary">{rooms.length}</div>
                    <small className="text-muted">–ö–æ–º–Ω–∞—Ç</small>
                  </div>
                  <div className="col-4">
                    <div className="fw-bold text-success">{availableRoomsCount}</div>
                    <small className="text-muted">–î–æ—Å—Ç—É–ø–Ω–æ</small>
                  </div>
                  <div className="col-4">
                    <div className="fw-bold text-warning">
                      {rooms.filter(r => r.status === 'playing').length}
                    </div>
                    <small className="text-muted">–í –∏–≥—Ä–µ</small>
                  </div>
                </div>
              </Card.Body>
            </Card>
          )}

          {/* –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã */}
          <Card className="mt-4 bg-light">
            <Card.Body>
              <h6 className="text-muted mb-3">üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã</h6>
              <ul className="list-unstyled small text-muted mb-0">
                <li className="mb-1">üéØ <strong>–¶–µ–ª—å:</strong> –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö –∫–∞—Ä—Ç –ø–µ—Ä–≤—ã–º</li>
                <li className="mb-1">üÉè <strong>–ö–æ–ª–æ–¥–∞:</strong> 36 –∫–∞—Ä—Ç (–æ—Ç 6 –¥–æ —Ç—É–∑–∞)</li>
                <li className="mb-1">üë• <strong>–ò–≥—Ä–æ–∫–∏:</strong> –æ—Ç 2 –¥–æ 6 —á–µ–ª–æ–≤–µ–∫</li>
                <li className="mb-1">‚ô† <strong>–ö–æ–∑—ã—Ä—å:</strong> –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                <li className="mb-1">‚öîÔ∏è <strong>–ü—Ä–∞–≤–∏–ª–∞:</strong> –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π, –ø–µ—Ä–µ–≤–æ–¥–Ω–æ–π –∏–ª–∏ —É–º–Ω—ã–π –¥—É—Ä–∞–∫</li>
              </ul>
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
};

export default MainMenu;
